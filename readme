1.СОРТИРОВКА ВЫБОРОМ - это простой алгоритм, который последовательно выбирает наименьший элемент из неотсортированной части массива и помещает его в начало отсортированной части.
Этот метод заключается в следующем:
1.	Найти минимальный элемент в оставшейся части массива и поменять его с первым ещё неотсортированным элементом.
2.	Повторять шаги до тех пор, пока весь массив не окажется отсортирован.

Временная сложность алгоритма (Big O):
BIG-O:O(n2)BIG-O:O(n2)

2.Алгоритм СОРТИРОВКА ПУЗЫРЬКОМ ("bubble sort") работает следующим образом: элементы массива последовательно сравниваются попарно и меняются местами, если находятся в неправильном порядке.
После каждого прохода максимальный элемент гарантированно перемещается в конец списка.
Скрипт реализует простой алгоритм сортировки методом пузырька, суть которого заключается в последовательном сравнении пар соседних элементов и их замене, пока весь список не окажется упорядоченным.

Временная сложность алгоритма пузырьковой сортировки равна 
O(n2)O(n2) в среднем и худшем случаях.


3.Алгоритм СОРТИРОВКИ ВСТАВКАМИ основан на идее постепенной интеграции новых элементов в уже отсортированную часть массива.
Суть метода заключается в следующем: берем новый элемент и помещаем его на правильную позицию среди ранее отсортированных элементов.
В общем случае имеет временную сложность O(n²)


4.Алгоритм СОРТИРОВКА СЛИЯНИЕМ (Merge Sort) основан на принципе рекурсивного деления массива на две половины, последующей сортировке половинок 
и их объединении обратно в единый отсортированный массив. Основная идея состоит в разделении задачи на небольшие подзадачи, решение которых проще и быстрее.
Временная сложность: O(N⋅logN)

5.Алгоритм СОРТИРОВКА ШЕЛЛА является усовершенствованной версией сортировки вставками. Его основная идея заключается в предварительном частичном упорядочивании
массива с использованием увеличенного шага (или интервала) между элементами, а затем постепенном уменьшении этого шага до единицы, что превращает сортировку
в обычную сортировку вставками.
Временная сложность: O(N1.25)O(N1.25)

6.БЫСТРАЯ СОРТИРОВКА (Quicksort) — это высокоэффективный алгоритм сортировки, использующий принцип "разделяй и властвуй". Он выбирает опорный
элемент ("pivot"), разделяя массив на две части: элементы меньше pivot'а и элементы больше pivot'а. Затем применяет тот же подход рекурсивно к обеим частям.
Временная сложность:  O(N⋅logN)O(N⋅logN)

7. Алгоритм ПИРАМИДАЛЬНАЯ СОРТИРОВКА (Heap Sort) — это быстрый и надежный метод сортировки, базирующийся на структуре бинарной кучи (binary heap).
Он работает в два этапа:

Строится куча из исходного массива.
Извлекаются максимальные элементы из кучи, формируя отсортированный массив.
Ключевая особенность: на каждом шаге мы извлекаем максимальный элемент (корень кучи) и перемещаем его в конец массива,
одновременно восстанавливая структуру кучи.
Временная сложность: O(NlogN)

8. 

